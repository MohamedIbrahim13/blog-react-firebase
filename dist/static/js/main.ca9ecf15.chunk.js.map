{"version":3,"sources":["components/layout/SigninLink.js","actions/authAction.js","components/layout/SignoutLink.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/projects/ProjectSummary.js","components/projects/ProjectsLists.js","components/dashboard/Dashboard.js","components/projects/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignOut.js","actions/projectAction.js","components/projects/CreateProject.js","App.js","serviceWorker.js","reducers/authReducer.js","reducers/projectsReducer.js","reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","getFirebase","auth","then","type","catch","err","console","log","props","className","to","onClick","profile","initials","SignoutLink","state","firebase","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLasttName","created_at","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","OwnProps","match","params","data","authorLastName","SignIn","email","password","handleSubmit","e","preventDefault","handleChange","setState","target","value","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","firstName","lastName","SignUp","newUser","getFirestore","createUserWithEmailAndPassword","res","doc","set","signUp","projectAction","authorId","add","Date","CreateProject","createProject","history","push","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","authReducder","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reduxFirestore","fbConfig","rrfProps","config","userProfile","useFirestoreForProfile","attachAuthIsReady","createFirestoreInstance","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.ca9ecf15.chunk.js","sourcesContent":["import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport {connect} from 'react-redux';\r\nimport {signOut} from '../../actions/authAction';\r\n\r\nconst SigninLink =(props)=>{\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/create'>New Project</NavLink></li>\r\n                <li><a onClick={props.signOut}>Log Out</a></li>\r\n                <li><NavLink to='/' className=\"btn btn-floating pink lighten-1\">{props.profile.initials}</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst mapDispatchtoProps =(dispatch)=>{\r\n    return {signOut:()=>dispatch(signOut())}\r\n}\r\n\r\nexport default connect(null,mapDispatchtoProps)(SigninLink)\r\n\r\n\r\n","export const signIn =(credentials)=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase =getFirebase();\r\n        firebase.auth().signInWithEmailAndPassword(credentials.email,credentials.password).then(()=>{\r\n            dispatch({type:'LOGIN_SUCCESS'})\r\n        }).catch(err=>{dispatch({type:'LOGIN_ERROR',err})});\r\n    }\r\n}\r\n\r\n\r\nexport const signOut =()=>{\r\n    return (dispatch,getState,{getFirebase})=>{\r\n        const firebase =getFirebase();\r\n        firebase.auth().signOut().then(()=>{\r\n            dispatch({type:'LOGOUT_SUCCESS'})\r\n        }).catch(err=>console.log(err));\r\n    }\r\n}\r\n\r\nexport const signUp =(newUser)=>{\r\n    return (dispatch,getState,{getFirebase,getFirestore})=>{\r\n        const firestore= getFirestore();\r\n        const firebase =getFirebase();\r\n        firebase.auth().createUserWithEmailAndPassword(newUser.email,newUser.password).then((res)=>{\r\n            return firestore.collection('users').doc(res.user.uid).set({\r\n                firstName:newUser.firstName,lastName:newUser.lastName,initials:newUser.firstName[0]+newUser.lastName[0]\r\n            })\r\n        }).then(()=>{\r\n            dispatch({type:'SIGNUP_SUCCESS'})\r\n        }).catch(err=>dispatch({type:'SIGNUP_ERROR',err})\r\n        );\r\n    }\r\n}","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nconst SignoutLink =()=>{\r\n    return (\r\n        <div>\r\n            <ul className=\"right\">\r\n                <li><NavLink to='/signup'>Signup</NavLink></li>\r\n                <li><NavLink to='/signin'>Login</NavLink></li>\r\n            </ul>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SignoutLink","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport SigninLink from './SigninLink';\r\nimport SignoutLink from './SignoutLink';\r\nimport {connect} from 'react-redux';\r\n\r\n\r\n\r\nconst Navbar =(props)=>{\r\n    const {auth,profile} = props;\r\n    const links =auth.uid ? <SigninLink profile={profile}/> : <SignoutLink />;\r\n    return (\r\n        <nav className=\"nav-wrapper grey darken-3\">\r\n            <div className=\"container\">\r\n                <Link to='/' className=\"brand-logo\">Blog</Link>\r\n                \r\n                {links}\r\n        \r\n           </div>\r\n        </nav>       \r\n    )\r\n}\r\n\r\nconst mapStatetoProps =(state)=>{\r\n    return {\r\n        auth:state.firebase.auth,\r\n        profile:state.firebase.profile\r\n    }\r\n}\r\n\r\nexport default connect(mapStatetoProps)(Navbar)","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst Notifications =(props)=>{\r\n    const {notifications}=props;\r\n    return (\r\n        <div className=\"section\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">Notifications</span>\r\n                    <ul className=\"online-users\">\r\n                        {notifications && notifications.map(item=>{\r\n                            return (\r\n                                <li key={item.id}>\r\n                                    <span className=\"pink-text\">{item.user} </span>\r\n                                    <span>{item.content}</span>\r\n                                    <div className=\"grey-text note-date\">\r\n                                        {moment(item.time.toDate()).fromNow()}\r\n                                    </div>\r\n                                </li>\r\n                            )\r\n                        })}\r\n                    </ul>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Notifications","import React from 'react';\r\nimport moment from 'moment';\r\n\r\nconst ProjectSummary =({project})=>{\r\n    return (\r\n      <div className=\"card z-depth-0 project-summary\">\r\n        <div className=\"card-content grey-text text-darken-3\">\r\n          <span className=\"card-title \">{project.title}</span>\r\n          <p>{project.content}</p>\r\n          <p>{project.authorFirstName} {project.authorLasttName}</p>\r\n          <p className=\"grey-text\">{moment(project.created_at.toDate()).calendar()}</p>\r\n        </div>\r\n      </div>  \r\n    )\r\n}\r\n\r\nexport default ProjectSummary\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport ProjectSummary from './ProjectSummary';\r\nimport {Link} from 'react-router-dom';\r\n\r\nconst ProjectList = ({projects}) => {\r\n  return (\r\n    <div className=\"project-list section\">\r\n      {projects && projects.map(project=>{\r\n          return (\r\n            <Link to ={'/project/'+project.id} key ={project.id}>\r\n               <ProjectSummary  project={project} />\r\n            </Link>\r\n            \r\n          )\r\n        })\r\n      }\r\n      \r\n    </div>\r\n  )\r\n}\r\n\r\nexport default ProjectList","import React,{Component} from 'react';\r\nimport Notifications from './Notifications';\r\nimport ProjectList from '../projects/ProjectsLists';\r\nimport {connect} from 'react-redux';\r\nimport {compose} from 'redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\n\r\nclass Dashboard extends Component {\r\n    render(){\r\n        const {projects,auth,notifications}=this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"dashboard container\">\r\n                <div className=\"row\">\r\n                    <div className=\"col s12 m6\">\r\n                        <ProjectList projects={projects}/>\r\n                    </div>\r\n                    <div className=\"col s12 m5 offset-m1\">\r\n                        <Notifications notifications={notifications}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n        \r\n    }\r\n}\r\n\r\nconst mapStatetoProps =(state)=>{\r\n    return {\r\n        projects:state.firestore.ordered.projects,\r\n        auth:state.firebase.auth,\r\n        notifications:state.firestore.ordered.notifications\r\n    }\r\n}\r\n\r\nexport default compose(connect(mapStatetoProps),firestoreConnect([{collection:'projects',orderBy:['created_at':'desc']},{collection:'notifications',limit:3,orderBy:['time':'desc']}]))(Dashboard)","import React from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {firestoreConnect} from 'react-redux-firebase';\r\nimport {compose} from 'redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport moment from 'moment';\r\n\r\n\r\nconst ProjectDetails=(props)=> {\r\n    const {project,auth} = props;\r\n    if(!auth.uid) return <Redirect to='/signin'/>\r\n    if(project){\r\n      return (\r\n        <div>\r\n          <div className=\"container section project-details\">\r\n            <div className=\"card z-depth-0\">\r\n                <div className=\"card-content\">\r\n                    <span className=\"card-title\">{project.title}</span>\r\n                    <p>{project.content}</p>\r\n                </div>\r\n                <div className=\"card-action grey lighten-4 grey-text\">\r\n                   <div>Posted by {project.authorFirstName} {project.authorLastName}</div>\r\n                   <div>{moment(project.created_at.toDate()).calendar()}</div>\r\n                </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      )\r\n    }else {\r\n      return (\r\n        <div className=\"container center\">\r\n          <p>Loading....</p>\r\n        </div>\r\n      )\r\n    }\r\n    \r\n}\r\n\r\nconst mapStatetoProps=(state,OwnProps)=>{\r\n  const id = OwnProps.match.params.id;\r\n  const projects = state.firestore.data.projects;\r\n  const project = projects ? projects[id]:null;\r\n  return {project:project,auth:state.firebase.auth}\r\n  \r\n}\r\n\r\nexport default compose(\r\n  connect(mapStatetoProps),firestoreConnect([{collection:'projects'}])\r\n)(ProjectDetails)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {signIn} from '../../actions/authAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass SignIn extends Component {\r\n    state = { email:'',password:''};\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.SignIn(this.state);\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    }\r\n    \r\n    render() {\r\n        const {authError,auth}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> :null} \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStatetoprops =(state)=>{\r\n    return {authError:state.auth.authError,auth:state.firebase.auth}\r\n}\r\nconst mapDispatchtoProps =(dispatch)=>{\r\n    return {SignIn:(creds)=>{dispatch(signIn(creds))}}\r\n}\r\n\r\nexport default connect(mapStatetoprops,mapDispatchtoProps)(SignIn)\r\n","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport {Redirect} from 'react-router-dom';\r\nimport {signUp} from '../../actions/authAction';\r\n\r\nclass SignIn extends Component {\r\n    state = { email:'',password:'',firstName:'',lastName:''};\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.SignUp(this.state);\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    }\r\n    \r\n    render() {\r\n        const {auth,authError}=this.props;\r\n        if(auth.uid) return <Redirect to='/'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" id='email' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"password\">Password</label>\r\n                        <input type=\"password\" id='password' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"firstName\">First Name</label>\r\n                        <input type=\"text\" id='firstName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <label htmlFor=\"lastName\">Last Name</label>\r\n                        <input type=\"text\" id='lastName' onChange={this.handleChange} />\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\r\n                        <div className=\"red-text center\">\r\n                            {authError ? <p>{authError}</p> :null} \r\n                        </div>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps=(state)=>{\r\n    \r\n    return {auth:state.firebase.auth,authError:state.auth.authError}\r\n    \r\n}\r\nconst mapDispatchtoProps =(dispatch)=>{\r\n    return {SignUp:(newUser)=>{dispatch(signUp(newUser))}}\r\n}\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(SignIn)\r\n","const projectAction =(project)=>{\r\n    return (dispatch,getState,{getFirestore})=>{\r\n        const firestore = getFirestore();\r\n        const profile = getState().firebase.profile;\r\n        const authorId=getState().firebase.auth.uid;\r\n        firestore.collection('projects').add({...project,authorFirstName:profile.firstName,\r\n    authorLastName:profile.lastName,created_at: new Date(),authorId:authorId}).then(()=>{\r\n        dispatch({type:'CREATE_PROJECT',project})\r\n    }).catch((err)=>{dispatch({type:'CREATE_PROJECT_ERR',err})})\r\n    }\r\n}\r\n\r\nexport default projectAction","import React, { Component } from 'react';\r\nimport {connect} from 'react-redux';\r\nimport projectAction from '../../actions/projectAction';\r\nimport {Redirect} from 'react-router-dom';\r\n\r\nclass CreateProject extends Component {\r\n    state = { title:'',content:''};\r\n    handleSubmit=(e)=>{\r\n        e.preventDefault();\r\n        this.props.createProject(this.state);\r\n        this.props.history.push('/');\r\n    }\r\n    handleChange=(e)=>{\r\n        this.setState({[e.target.id]:e.target.value});\r\n    }\r\n    \r\n    render() {\r\n        const {auth}=this.props;\r\n        if(!auth.uid) return <Redirect to='/signin'/>\r\n        return (\r\n            <div className=\"container\">\r\n                <form className=\"white\" onSubmit={this.handleSubmit}>\r\n                    <h5 className=\"grey-text text-darken-3\">Create a New Project</h5>\r\n                    <div className=\"input-field\">\r\n                        <input type=\"text\" id='title' onChange={this.handleChange} />\r\n                        <label htmlFor=\"title\">Project Title</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange}></textarea>\r\n                        <label htmlFor=\"content\">Project Content</label>\r\n                    </div>\r\n                    <div className=\"input-field\">\r\n                        <button className=\"btn pink lighten-1\">Create</button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\nconst mapStatetoProps =(state)=>{\r\n    return {\r\n        \r\n        auth:state.firebase.auth\r\n    }\r\n}\r\nconst mapDispatchtoProps =(dispatch)=>{\r\n    return {createProject:(project)=>dispatch(projectAction(project))}\r\n}\r\n\r\nexport default connect(mapStatetoProps,mapDispatchtoProps)(CreateProject)","import React,{Component} from 'react';\nimport Navbar from './components/layout/Navbar';\nimport {BrowserRouter,Switch,Route} from 'react-router-dom';\nimport Dashboard from './components/dashboard/Dashboard';\nimport ProjectDetails from './components/projects/ProjectDetails';\nimport SignIn from './components/auth/SignIn';\nimport SignUp from './components/auth/SignOut';\nimport CreateProject from './components/projects/CreateProject';\n\n\n\n\nclass App extends Component {\n  render(){\n    return (\n      <BrowserRouter>\n          <div className=\"App\">\n            <Navbar />\n            <Switch>\n              <Route exact path='/' component={Dashboard} />\n              <Route path='/project/:id' component={ProjectDetails} />\n              <Route path='/signin' component={SignIn} />\n              <Route path='/signup' component={SignUp} />\n              <Route path='/create' component={CreateProject} />\n            </Switch>\n          </div>\n      </BrowserRouter>\n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","const initState = {authError:null}\r\n\r\n\r\nconst authReducer =(state=initState,action)=>{\r\n    switch(action.type){\r\n        case 'LOGIN_SUCCESS':\r\n            return {...state,authError:null};\r\n        case 'LOGIN_ERROR':\r\n            return {...state,authError:'Login Failed'}\r\n        case 'LOGOUT_SUCCESS':\r\n            return state;\r\n        case 'SIGNUP_SUCCESS':\r\n            return {...state,authError:null};\r\n        case 'SIGNUP_ERROR':\r\n            return {...state,authError:action.err.message};\r\n        default:\r\n            return state;\r\n        \r\n    }\r\n}\r\n\r\nexport default authReducer","const initState = {\r\n    projects: [\r\n      {id: '1', title: 'help me find peach', content: 'blah blah blah'},\r\n      {id: '2', title: 'collect all the stars', content: 'blah blah blah'},\r\n      {id: '3', title: 'egg hunt with yoshi', content: 'blah blah blah'}\r\n    ]\r\n}\r\n\r\n\r\nconst projectReducer =(state=initState,action)=>{\r\n  switch(action.type){\r\n    case 'CREATE_PROJECT':\r\n      console.log(action.project);\r\n      return state;\r\n    case 'CREATE_PROJECT_ERR':\r\n      console.log(action.err);\r\n      return state;\r\n    default:\r\n      return state;\r\n\r\n  }\r\n  \r\n}\r\n\r\nexport default projectReducer","import authReducder from './authReducer';\r\nimport projectReducer from './projectsReducer';\r\nimport {combineReducers} from 'redux';\r\nimport {firestoreReducer} from 'redux-firestore';\r\nimport {firebaseReducer} from 'react-redux-firebase';\r\n\r\n\r\nconst rootReducer =combineReducers({auth:authReducder,projects:projectReducer,firestore:firestoreReducer,firebase:firebaseReducer});\r\n\r\nexport default rootReducer","import firebase from 'firebase/app';\r\nimport 'firebase/firestore';\r\nimport 'firebase/auth';\r\n\r\n\r\n\r\n// Your web app's Firebase configuration\r\nvar firebaseConfig = {\r\n    apiKey: \"AIzaSyCLSTQZIoQymddAHopLYiEl-8IddZ1ixhE\",\r\n    authDomain: \"blog-react-c7311.firebaseapp.com\",\r\n    databaseURL: \"https://blog-react-c7311.firebaseio.com\",\r\n    projectId: \"blog-react-c7311\",\r\n    storageBucket: \"blog-react-c7311.appspot.com\",\r\n    messagingSenderId: \"720154041555\",\r\n    appId: \"1:720154041555:web:957e27740d3b21be778826\"\r\n  };\r\n// Initialize Firebase\r\nfirebase.initializeApp(firebaseConfig);\r\nfirebase.firestore().settings({timestampsInSnapshots:true});\r\n\r\nexport default firebase\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport {Provider} from 'react-redux';\nimport {createStore,applyMiddleware,compose} from 'redux';\nimport rootReducer from './reducers/rootReducer';\nimport thunk from 'redux-thunk';\nimport {getFirebase,ReactReduxFirebaseProvider} from 'react-redux-firebase';\nimport {reduxFirestore,getFirestore,createFirestoreInstance} from 'redux-firestore';\nimport fbConfig from './config/fbConfig';\nimport firebase from 'firebase/app';\n\n\n\nconst store = createStore(rootReducer,compose(applyMiddleware(thunk.withExtraArgument({getFirebase, getFirestore})),reduxFirestore(firebase,fbConfig)));\nconst rrfConfig = {\n    userProfile: 'users',\n    useFirestoreForProfile: true,\n    attachAuthIsReady: true\n};\n  \n  \nconst rrfProps = {\n    firebase,\n    config: rrfConfig,\n    dispatch: store.dispatch,\n    createFirestoreInstance\n};\n// const rrfProps = {\n//     firebase,\n//     config: fbConfig,\n//     dispatch: store.dispatch,\n//     createFirestoreInstance\n// };\n\nReactDOM.render(<Provider store={store}><ReactReduxFirebaseProvider {...rrfProps}><App /></ReactReduxFirebaseProvider></Provider>, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}